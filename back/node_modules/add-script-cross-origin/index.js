var compose = require('./libs/compose');
var globule = require('globule');
var path = require('path');
var fs = require('fs');
var pify = require('pify');
var pfs = pify(fs);

function replaceCrossOriginAttr(str) {
    return str.replace(/crossorigin(\s*=\s*true)?/g, '')
}

function trimEnd(str) {
    return str.replace(/\s*$/g, '');
}

function createScriptNodeText(src, attrs) {
    return '<script src="' + src + '"' + compose(trimEnd, replaceCrossOriginAttr)(attrs) + ' crossorigin></script>'
}

function addScriptTagCrossOrigin(content) {
    var coreScriptReg = /<script src\="(\/r\/core.*)"(.*)><\/script>/g 
    var pageScriptReg = /<script src="(\/r\/pt_.*)"(.*)><\/script>/g;

    return [
        coreScriptReg, pageScriptReg
    ].reduce(function (content, scriptReg) {
        return content.replace(scriptReg, function($0, $1, $2) {
            return createScriptNodeText($1, $2)
        });
    }, content);
}

function transform(files) {
    return Promise.all(files.map(function (file) {
        return pfs.readFile(file)
            .then(function(content) {
                return compose(function(content) {
                    return pfs.writeFile(file, content);
                }, addScriptTagCrossOrigin)(content.toString()); 
            });
    }))
}

function addScriptCrossOrigin(pattern) {
    try {
        var files = globule.find(pattern);
        return transform(files)
    } catch (e) {
        return Promise.reject(e);
    }
}

module.exports = addScriptCrossOrigin;